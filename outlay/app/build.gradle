buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'

apply from: '../testformatter.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def propsFile = rootProject.file('release.properties')
    def props = new Properties()
    if (propsFile.exists()) {
        props.load(new FileInputStream(propsFile))
    }

    signingConfigs {
        release {
            if (propsFile.exists()) {
                storeFile file(props['RELEASE_STORE_FILE'])
                storePassword props['RELEASE_STORE_PASSWORD']
                keyAlias props['RELEASE_KEY_ALIAS']
                keyPassword props['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "USE_ANALYTICS", "false"
        }
        staging {
            buildConfigField "boolean", "USE_ANALYTICS", "false"
        }
        release {
            buildConfigField "boolean", "USE_ANALYTICS", "true"

            if (propsFile.exists()) {
                signingConfig signingConfigs.release
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "3g"
    }

    packagingOptions {
        //<div>Icons made by <a href="http://www.flaticon.com/authors/gregor-cresnar" title="Gregor Cresnar">Gregor Cresnar</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':domain')

    //Google
    apt "com.google.dagger:dagger-compiler:${libs.dagger}"

    //Support
    compile "com.android.support:support-v13:${libs.supportVersion}"
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:design:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    compile "com.android.support:recyclerview-v7:${libs.supportVersion}"

    //Rx
    compile "io.reactivex:rxjava:${libs.rxjava}"
    compile "io.reactivex:rxandroid:${libs.rxandroid}"

    //UI
    compile('com.mikepenz:materialdrawer:5.8.1@aar') {
        transitive = true
    }
    compile 'com.mikepenz:material-design-iconic-typeface:+@aar'

    compile 'com.jakewharton:butterknife:7.0.1'

    compile "com.github.johnkil.print:print:1.3.1"
    compile(group: 'uz.shift', name: 'colorpicker', version: '0.5', ext: 'aar')
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.1'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.2.0'

    compile 'com.hannesdorfmann.mosby:mvp:2.0.1'

    compile "com.google.firebase:firebase-core:${libs.firebase}"
    compile "com.google.firebase:firebase-auth:${libs.firebase}"
    compile "com.google.firebase:firebase-database:${libs.firebase}"
    releaseCompile "com.google.firebase:firebase-crash:${libs.firebase}"
    stagingCompile "com.google.firebase:firebase-crash:${libs.firebase}"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
